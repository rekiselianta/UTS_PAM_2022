{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkPluginState = void 0;\nexports.configureProps = configureProps;\nexports.enableLayoutAnimations = enableLayoutAnimations;\nexports.getTimestamp = getTimestamp;\nexports.getViewProp = getViewProp;\nexports.isConfiguredCheck = exports.isConfigured = void 0;\nexports.jestResetJsReanimatedModule = jestResetJsReanimatedModule;\nexports.makeMutable = makeMutable;\nexports.makeRemote = makeRemote;\nexports.makeShareable = makeShareable;\nexports.requestFrame = requestFrame;\nexports.runOnJS = runOnJS;\nexports.runOnUI = runOnUI;\nexports.startMapper = startMapper;\nexports.stopMapper = stopMapper;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _NativeReanimated = _interopRequireDefault(require(\"./NativeReanimated\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _PlatformChecker = require(\"./PlatformChecker\");\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n};\n\nif (global._setGlobalConsole === undefined) {\n  global._setGlobalConsole = function () {};\n}\n\nvar testWorklet = function testWorklet() {\n  'worklet';\n};\n\nvar checkPluginState = function checkPluginState() {\n  var throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  if (!testWorklet.__workletHash && !(0, _PlatformChecker.shouldBeUseWeb)()) {\n    if (throwError) {\n      throw new Error(\"Reanimated 2 failed to create a worklet, maybe you forgot to add Reanimated's babel plugin?\");\n    }\n\n    return false;\n  }\n\n  return true;\n};\n\nexports.checkPluginState = checkPluginState;\n\nvar isConfigured = function isConfigured() {\n  var throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return checkPluginState(throwError);\n};\n\nexports.isConfigured = isConfigured;\n\nvar isConfiguredCheck = function isConfiguredCheck() {\n  if (!isConfigured(true)) {\n    throw new Error('If you want to use Reanimated 2 then go through our installation steps https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation');\n  }\n};\n\nexports.isConfiguredCheck = isConfiguredCheck;\n\nfunction _toArrayReanimated(object) {\n  'worklet';\n\n  if (Array.isArray(object)) {\n    return object;\n  }\n\n  if (typeof Symbol !== 'undefined' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in Object(object)) {\n    return Array.from(object);\n  }\n\n  throw new Error('Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');\n}\n\nfunction _mergeObjectsReanimated() {\n  'worklet';\n\n  var arr = Array.from(arguments);\n  return Object.assign.apply(null, [arr[0]].concat((0, _toConsumableArray2.default)(arr.slice(1))));\n}\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n\n  if (worklet._closure) {\n    var closure = worklet._closure;\n    Object.keys(closure).forEach(function (key) {\n      if (key === '_toConsumableArray') {\n        closure[key] = _toArrayReanimated;\n      }\n\n      if (key === '_objectSpread') {\n        closure[key] = _mergeObjectsReanimated;\n      }\n    });\n  }\n};\n\nfunction pushFrame(frame) {\n  _NativeReanimated.default.pushFrame(frame);\n}\n\nfunction requestFrame(frame) {\n  'worklet';\n\n  if (_NativeReanimated.default.native) {\n    requestAnimationFrame(frame);\n  } else {\n    pushFrame(frame);\n  }\n}\n\nglobal._WORKLET = false;\n\nglobal._log = function (s) {\n  console.log(s);\n};\n\nfunction runOnUI(worklet) {\n  return makeShareable(worklet);\n}\n\nfunction makeShareable(value) {\n  isConfiguredCheck();\n  return _NativeReanimated.default.makeShareable(value);\n}\n\nfunction getViewProp(viewTag, propName) {\n  return new Promise(function (resolve, reject) {\n    return _NativeReanimated.default.getViewProp(viewTag, propName, function (result) {\n      if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nvar _getTimestamp;\n\nif ((0, _PlatformChecker.nativeShouldBeMock)()) {\n  _getTimestamp = function _getTimestamp() {\n    return _NativeReanimated.default.getTimestamp();\n  };\n} else {\n  _getTimestamp = function _getTimestamp() {\n    'worklet';\n\n    if (_frameTimestamp) {\n      return _frameTimestamp;\n    }\n\n    if (_eventTimestamp) {\n      return _eventTimestamp;\n    }\n\n    return _getCurrentTime();\n  };\n}\n\nfunction getTimestamp() {\n  'worklet';\n\n  if (_reactNative.Platform.OS === 'web') {\n    return _NativeReanimated.default.getTimestamp();\n  }\n\n  return _getTimestamp();\n}\n\nfunction workletValueSetter(value) {\n  'worklet';\n\n  var _this = this;\n\n  var previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame !== undefined) {\n    var animation = typeof value === 'function' ? value() : value;\n\n    if (this._value === animation.current && !animation.isHigherOrder) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n\n    var initializeAnimation = function initializeAnimation(timestamp) {\n      animation.onStart(animation, _this.value, timestamp, previousAnimation);\n    };\n\n    initializeAnimation(getTimestamp());\n\n    var step = function step(timestamp) {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false);\n        return;\n      }\n\n      var finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      _this._value = animation.current;\n\n      if (finished) {\n        animation.callback && animation.callback(true);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    if (_frameTimestamp) {\n      step(_frameTimestamp);\n    } else {\n      requestAnimationFrame(step);\n    }\n  } else {\n    if (this._value === value) {\n      return;\n    }\n\n    this._value = value;\n  }\n}\n\nfunction workletValueSetterJS(value) {\n  var _this2 = this;\n\n  var previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame) {\n    var animation = typeof value === 'function' ? value() : value;\n\n    var initializeAnimation = function initializeAnimation(timestamp) {\n      animation.onStart(animation, _this2.value, timestamp, previousAnimation);\n    };\n\n    var step = function step(timestamp) {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false);\n        return;\n      }\n\n      if (initializeAnimation) {\n        initializeAnimation(timestamp);\n        initializeAnimation = null;\n      }\n\n      var finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      _this2._setValue && _this2._setValue(animation.current);\n\n      if (finished) {\n        animation.callback && animation.callback(true);\n      } else {\n        requestFrame(step);\n      }\n    };\n\n    this._animation = animation;\n    requestFrame(step);\n  } else {\n    this._setValue && this._setValue(value);\n  }\n}\n\nfunction makeMutable(value) {\n  isConfiguredCheck();\n  return _NativeReanimated.default.makeMutable(value);\n}\n\nfunction makeRemote() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  isConfiguredCheck();\n  return _NativeReanimated.default.makeRemote(object);\n}\n\nfunction startMapper(mapper) {\n  var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var updater = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n  var viewDescriptors = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  isConfiguredCheck();\n  return _NativeReanimated.default.startMapper(mapper, inputs, outputs, updater, viewDescriptors);\n}\n\nfunction stopMapper(mapperId) {\n  _NativeReanimated.default.stopMapper(mapperId);\n}\n\nfunction runOnJS(fun) {\n  'worklet';\n\n  if (!_WORKLET) {\n    return fun;\n  }\n\n  if (!fun.__callAsync) {\n    throw new Error(\"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\");\n  } else {\n    return fun.__callAsync;\n  }\n}\n\n_NativeReanimated.default.installCoreFunctions(_NativeReanimated.default.native ? workletValueSetter : workletValueSetterJS);\n\nif (!(0, _PlatformChecker.isWeb)() && isConfigured()) {\n  var capturableConsole = console;\n  runOnUI(function () {\n    'worklet';\n\n    var console = {\n      debug: runOnJS(capturableConsole.debug),\n      log: runOnJS(capturableConsole.log),\n      warn: runOnJS(capturableConsole.warn),\n      error: runOnJS(capturableConsole.error),\n      info: runOnJS(capturableConsole.info)\n    };\n\n    _setGlobalConsole(console);\n\n    if (global.performance == null) {\n      global.performance = {\n        now: global._chronoNow\n      };\n    }\n  })();\n}\n\nvar featuresConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false\n};\n\nfunction enableLayoutAnimations(flag) {\n  var isCallByUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true\n    };\n\n    _NativeReanimated.default.enableLayoutAnimations(flag);\n  } else if (!featuresConfig.setByUser && featuresConfig.enableLayoutAnimations !== flag) {\n    featuresConfig.enableLayoutAnimations = flag;\n\n    _NativeReanimated.default.enableLayoutAnimations(flag);\n  }\n}\n\nfunction configureProps(uiProps, nativeProps) {\n  if (!(0, _PlatformChecker.nativeShouldBeMock)()) {\n    _NativeReanimated.default.configureProps(uiProps, nativeProps);\n  }\n}\n\nfunction jestResetJsReanimatedModule() {\n  _NativeReanimated.default.jestResetModule();\n}","map":{"version":3,"sources":["C:/Users/USER/uts/node_modules/react-native-reanimated/lib/reanimated2/core.js"],"names":["global","__reanimatedWorkletInit","worklet","__worklet","_setGlobalConsole","undefined","testWorklet","checkPluginState","throwError","__workletHash","Error","isConfigured","isConfiguredCheck","_toArrayReanimated","object","Array","isArray","Symbol","iterator","Object","from","_mergeObjectsReanimated","arr","arguments","assign","apply","slice","_closure","closure","keys","forEach","key","pushFrame","frame","NativeReanimatedModule","requestFrame","native","requestAnimationFrame","_WORKLET","_log","s","console","log","runOnUI","makeShareable","value","getViewProp","viewTag","propName","Promise","resolve","reject","result","substr","_getTimestamp","getTimestamp","_frameTimestamp","_eventTimestamp","_getCurrentTime","Platform","OS","workletValueSetter","previousAnimation","_animation","cancelled","onFrame","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","step","finished","workletValueSetterJS","_setValue","makeMutable","makeRemote","startMapper","mapper","inputs","outputs","updater","viewDescriptors","stopMapper","mapperId","runOnJS","fun","__callAsync","installCoreFunctions","capturableConsole","debug","warn","error","info","performance","now","_chronoNow","featuresConfig","enableLayoutAnimations","setByUser","flag","isCallByUser","configureProps","uiProps","nativeProps","jestResetJsReanimatedModule","jestResetModule"],"mappings":"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","sourcesContent":["/* global _WORKLET _getCurrentTime _frameTimestamp _eventTimestamp, _setGlobalConsole */\nimport NativeReanimatedModule from './NativeReanimated';\nimport { Platform } from 'react-native';\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from './PlatformChecker';\nglobal.__reanimatedWorkletInit = function (worklet) {\n    worklet.__worklet = true;\n};\nif (global._setGlobalConsole === undefined) {\n    // it can happen when Reanimated plugin wasn't added, but the user uses the only API from version 1\n    global._setGlobalConsole = () => {\n        // noop\n    };\n}\nconst testWorklet = () => {\n    'worklet';\n};\nexport const checkPluginState = (throwError = true) => {\n    if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n        if (throwError) {\n            throw new Error(\"Reanimated 2 failed to create a worklet, maybe you forgot to add Reanimated's babel plugin?\");\n        }\n        return false;\n    }\n    return true;\n};\nexport const isConfigured = (throwError = false) => {\n    return checkPluginState(throwError);\n};\nexport const isConfiguredCheck = () => {\n    if (!isConfigured(true)) {\n        throw new Error('If you want to use Reanimated 2 then go through our installation steps https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation');\n    }\n};\nfunction _toArrayReanimated(object) {\n    'worklet';\n    if (Array.isArray(object)) {\n        return object;\n    }\n    if (typeof Symbol !== 'undefined' &&\n        (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in\n            Object(object)) {\n        return Array.from(object);\n    }\n    throw new Error('Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');\n}\nfunction _mergeObjectsReanimated() {\n    'worklet';\n    // we can't use rest parameters in worklets at the moment\n    // eslint-disable-next-line prefer-rest-params\n    const arr = Array.from(arguments);\n    return Object.assign.apply(null, [arr[0], ...arr.slice(1)]);\n}\nglobal.__reanimatedWorkletInit = function (worklet) {\n    worklet.__worklet = true;\n    if (worklet._closure) {\n        const closure = worklet._closure;\n        Object.keys(closure).forEach((key) => {\n            if (key === '_toConsumableArray') {\n                closure[key] = _toArrayReanimated;\n            }\n            if (key === '_objectSpread') {\n                closure[key] = _mergeObjectsReanimated;\n            }\n        });\n    }\n};\nfunction pushFrame(frame) {\n    NativeReanimatedModule.pushFrame(frame);\n}\nexport function requestFrame(frame) {\n    'worklet';\n    if (NativeReanimatedModule.native) {\n        requestAnimationFrame(frame);\n    }\n    else {\n        pushFrame(frame);\n    }\n}\nglobal._WORKLET = false;\nglobal._log = function (s) {\n    console.log(s);\n};\nexport function runOnUI(worklet) {\n    return makeShareable(worklet);\n}\nexport function makeShareable(value) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.makeShareable(value);\n}\nexport function getViewProp(viewTag, propName) {\n    return new Promise((resolve, reject) => {\n        return NativeReanimatedModule.getViewProp(viewTag, propName, (result) => {\n            if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n                reject(result);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    });\n}\nlet _getTimestamp;\nif (nativeShouldBeMock()) {\n    _getTimestamp = () => {\n        return NativeReanimatedModule.getTimestamp();\n    };\n}\nelse {\n    _getTimestamp = () => {\n        'worklet';\n        if (_frameTimestamp) {\n            return _frameTimestamp;\n        }\n        if (_eventTimestamp) {\n            return _eventTimestamp;\n        }\n        return _getCurrentTime();\n    };\n}\nexport function getTimestamp() {\n    'worklet';\n    if (Platform.OS === 'web') {\n        return NativeReanimatedModule.getTimestamp();\n    }\n    return _getTimestamp();\n}\nfunction workletValueSetter(value) {\n    'worklet';\n    const previousAnimation = this._animation;\n    if (previousAnimation) {\n        previousAnimation.cancelled = true;\n        this._animation = null;\n    }\n    if (typeof value === 'function' ||\n        (value !== null &&\n            typeof value === 'object' &&\n            value.onFrame !== undefined)) {\n        const animation = typeof value === 'function'\n            ? value()\n            : value;\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n        // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n        if (this._value === animation.current && !animation.isHigherOrder) {\n            animation.callback && animation.callback(true);\n            return;\n        }\n        // animated set\n        const initializeAnimation = (timestamp) => {\n            animation.onStart(animation, this.value, timestamp, previousAnimation);\n        };\n        initializeAnimation(getTimestamp());\n        const step = (timestamp) => {\n            if (animation.cancelled) {\n                animation.callback && animation.callback(false /* finished */);\n                return;\n            }\n            const finished = animation.onFrame(animation, timestamp);\n            animation.finished = true;\n            animation.timestamp = timestamp;\n            this._value = animation.current;\n            if (finished) {\n                animation.callback && animation.callback(true /* finished */);\n            }\n            else {\n                requestAnimationFrame(step);\n            }\n        };\n        this._animation = animation;\n        if (_frameTimestamp) {\n            // frame\n            step(_frameTimestamp);\n        }\n        else {\n            requestAnimationFrame(step);\n        }\n    }\n    else {\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n    }\n}\n// We cannot use pushFrame\n// so we use own implementation for js\nfunction workletValueSetterJS(value) {\n    const previousAnimation = this._animation;\n    if (previousAnimation) {\n        previousAnimation.cancelled = true;\n        this._animation = null;\n    }\n    if (typeof value === 'function' ||\n        (value !== null &&\n            typeof value === 'object' &&\n            value.onFrame)) {\n        // animated set\n        const animation = typeof value === 'function'\n            ? value()\n            : value;\n        let initializeAnimation = (timestamp) => {\n            animation.onStart(animation, this.value, timestamp, previousAnimation);\n        };\n        const step = (timestamp) => {\n            if (animation.cancelled) {\n                animation.callback && animation.callback(false /* finished */);\n                return;\n            }\n            if (initializeAnimation) {\n                initializeAnimation(timestamp);\n                initializeAnimation = null; // prevent closure from keeping ref to previous animation\n            }\n            const finished = animation.onFrame(animation, timestamp);\n            animation.timestamp = timestamp;\n            this._setValue && this._setValue(animation.current);\n            if (finished) {\n                animation.callback && animation.callback(true /* finished */);\n            }\n            else {\n                requestFrame(step);\n            }\n        };\n        this._animation = animation;\n        requestFrame(step);\n    }\n    else {\n        this._setValue && this._setValue(value);\n    }\n}\nexport function makeMutable(value) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.makeMutable(value);\n}\nexport function makeRemote(object = {}) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.makeRemote(object);\n}\nexport function startMapper(mapper, inputs = [], outputs = [], updater = () => {\n    // noop\n}, viewDescriptors = []) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.startMapper(mapper, inputs, outputs, updater, viewDescriptors);\n}\nexport function stopMapper(mapperId) {\n    NativeReanimatedModule.stopMapper(mapperId);\n}\nexport function runOnJS(fun) {\n    'worklet';\n    if (!_WORKLET) {\n        return fun;\n    }\n    if (!fun.__callAsync) {\n        throw new Error(\"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\");\n    }\n    else {\n        return fun.__callAsync;\n    }\n}\nNativeReanimatedModule.installCoreFunctions(NativeReanimatedModule.native\n    ? workletValueSetter\n    : workletValueSetterJS);\nif (!isWeb() && isConfigured()) {\n    const capturableConsole = console;\n    runOnUI(() => {\n        'worklet';\n        const console = {\n            debug: runOnJS(capturableConsole.debug),\n            log: runOnJS(capturableConsole.log),\n            warn: runOnJS(capturableConsole.warn),\n            error: runOnJS(capturableConsole.error),\n            info: runOnJS(capturableConsole.info),\n        };\n        _setGlobalConsole(console);\n        if (global.performance == null) {\n            global.performance = {\n                now: global._chronoNow,\n            }; // due to conflict with lib.dom.d.ts -> Performance\n        }\n    })();\n}\nlet featuresConfig = {\n    enableLayoutAnimations: false,\n    setByUser: false,\n};\nexport function enableLayoutAnimations(flag, isCallByUser = true) {\n    if (isCallByUser) {\n        featuresConfig = {\n            enableLayoutAnimations: flag,\n            setByUser: true,\n        };\n        NativeReanimatedModule.enableLayoutAnimations(flag);\n    }\n    else if (!featuresConfig.setByUser &&\n        featuresConfig.enableLayoutAnimations !== flag) {\n        featuresConfig.enableLayoutAnimations = flag;\n        NativeReanimatedModule.enableLayoutAnimations(flag);\n    }\n}\nexport function configureProps(uiProps, nativeProps) {\n    if (!nativeShouldBeMock()) {\n        NativeReanimatedModule.configureProps(uiProps, nativeProps);\n    }\n}\nexport function jestResetJsReanimatedModule() {\n    NativeReanimatedModule.jestResetModule();\n}\n"]},"metadata":{},"sourceType":"script"}