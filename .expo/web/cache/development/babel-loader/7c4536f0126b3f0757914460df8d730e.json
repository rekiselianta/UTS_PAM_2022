{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PinwheelOut = exports.PinwheelIn = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _animationBuilder = require(\"../animationBuilder\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PinwheelIn = function (_ComplexAnimationBuil) {\n  (0, _inherits2.default)(PinwheelIn, _ComplexAnimationBuil);\n\n  var _super = _createSuper(PinwheelIn);\n\n  function PinwheelIn() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PinwheelIn);\n    _this = _super.apply(this, arguments);\n\n    _this.build = function () {\n      var delayFunction = _this.getDelayFunction();\n\n      var _this$getAnimationAnd = _this.getAnimationAndConfig(),\n          _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),\n          animation = _this$getAnimationAnd2[0],\n          config = _this$getAnimationAnd2[1];\n\n      var delay = _this.getDelay();\n\n      var callback = _this.callbackV;\n      var initialValues = _this.initialValues;\n      return function (_values) {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(1, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(1, config))\n            }, {\n              rotate: delayFunction(delay, animation('0', config))\n            }]\n          },\n          initialValues: (0, _extends2.default)({\n            opacity: 0,\n            transform: [{\n              scale: 0\n            }, {\n              rotate: '5'\n            }]\n          }, initialValues),\n          callback: callback\n        };\n      };\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(PinwheelIn, null, [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      return new PinwheelIn();\n    }\n  }]);\n  return PinwheelIn;\n}(_animationBuilder.ComplexAnimationBuilder);\n\nexports.PinwheelIn = PinwheelIn;\n\nvar PinwheelOut = function (_ComplexAnimationBuil2) {\n  (0, _inherits2.default)(PinwheelOut, _ComplexAnimationBuil2);\n\n  var _super2 = _createSuper(PinwheelOut);\n\n  function PinwheelOut() {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, PinwheelOut);\n    _this2 = _super2.apply(this, arguments);\n\n    _this2.build = function () {\n      var delayFunction = _this2.getDelayFunction();\n\n      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),\n          _this2$getAnimationAn2 = (0, _slicedToArray2.default)(_this2$getAnimationAn, 2),\n          animation = _this2$getAnimationAn2[0],\n          config = _this2$getAnimationAn2[1];\n\n      var delay = _this2.getDelay();\n\n      var callback = _this2.callbackV;\n      var initialValues = _this2.initialValues;\n      return function (_values) {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(0, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(0, config))\n            }, {\n              rotate: delayFunction(delay, animation('5', config))\n            }]\n          },\n          initialValues: (0, _extends2.default)({\n            opacity: 1,\n            transform: [{\n              scale: 1\n            }, {\n              rotate: '0'\n            }]\n          }, initialValues),\n          callback: callback\n        };\n      };\n    };\n\n    return _this2;\n  }\n\n  (0, _createClass2.default)(PinwheelOut, null, [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      return new PinwheelOut();\n    }\n  }]);\n  return PinwheelOut;\n}(_animationBuilder.ComplexAnimationBuilder);\n\nexports.PinwheelOut = PinwheelOut;","map":{"version":3,"sources":["C:/Users/USER/uts/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultAnimations/Pinwheel.js"],"names":["PinwheelIn","arguments","build","delayFunction","getDelayFunction","getAnimationAndConfig","animation","config","delay","getDelay","callback","callbackV","initialValues","_values","animations","opacity","transform","scale","rotate","ComplexAnimationBuilder","PinwheelOut"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IACaA,U;;;;;AACT,wBAAc;AAAA;;AAAA;AACV,+BAASC,SAAT;;AACA,UAAKC,KAAL,GAAa,YAAM;AACf,UAAMC,aAAa,GAAG,MAAKC,gBAAL,EAAtB;;AACA,kCAA4B,MAAKC,qBAAL,EAA5B;AAAA;AAAA,UAAOC,SAAP;AAAA,UAAkBC,MAAlB;;AACA,UAAMC,KAAK,GAAG,MAAKC,QAAL,EAAd;;AACA,UAAMC,QAAQ,GAAG,MAAKC,SAAtB;AACA,UAAMC,aAAa,GAAG,MAAKA,aAA3B;AACA,aAAO,UAACC,OAAD,EAAa;AAChB;;AACA,eAAO;AACHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,OAAO,EAAEZ,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB,CADd;AAERS,YAAAA,SAAS,EAAE,CACP;AACIC,cAAAA,KAAK,EAAEd,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB;AADxB,aADO,EAIP;AACIW,cAAAA,MAAM,EAAEf,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,GAAD,EAAMC,MAAN,CAAjB;AADzB,aAJO;AAFH,WADT;AAYHK,UAAAA,aAAa,EAAE,uBAAc;AAAEG,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,SAAS,EAAE,CAC9C;AACIC,cAAAA,KAAK,EAAE;AADX,aAD8C,EAI9C;AACIC,cAAAA,MAAM,EAAE;AADZ,aAJ8C;AAAzB,WAAd,EAONN,aAPM,CAZZ;AAoBHF,UAAAA,QAAQ,EAAEA;AApBP,SAAP;AAsBH,OAxBD;AAyBH,KA/BD;;AAFU;AAkCb;;;;WACD,0BAAwB;AACpB,aAAO,IAAIV,UAAJ,EAAP;AACH;;;EAtC2BmB,yC;;;;IAwCnBC,W;;;;;AACT,yBAAc;AAAA;;AAAA;AACV,iCAASnB,SAAT;;AACA,WAAKC,KAAL,GAAa,YAAM;AACf,UAAMC,aAAa,GAAG,OAAKC,gBAAL,EAAtB;;AACA,kCAA4B,OAAKC,qBAAL,EAA5B;AAAA;AAAA,UAAOC,SAAP;AAAA,UAAkBC,MAAlB;;AACA,UAAMC,KAAK,GAAG,OAAKC,QAAL,EAAd;;AACA,UAAMC,QAAQ,GAAG,OAAKC,SAAtB;AACA,UAAMC,aAAa,GAAG,OAAKA,aAA3B;AACA,aAAO,UAACC,OAAD,EAAa;AAChB;;AACA,eAAO;AACHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,OAAO,EAAEZ,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB,CADd;AAERS,YAAAA,SAAS,EAAE,CACP;AACIC,cAAAA,KAAK,EAAEd,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB;AADxB,aADO,EAIP;AACIW,cAAAA,MAAM,EAAEf,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,GAAD,EAAMC,MAAN,CAAjB;AADzB,aAJO;AAFH,WADT;AAYHK,UAAAA,aAAa,EAAE,uBAAc;AAAEG,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,SAAS,EAAE,CAC9C;AACIC,cAAAA,KAAK,EAAE;AADX,aAD8C,EAI9C;AACIC,cAAAA,MAAM,EAAE;AADZ,aAJ8C;AAAzB,WAAd,EAONN,aAPM,CAZZ;AAoBHF,UAAAA,QAAQ,EAAEA;AApBP,SAAP;AAsBH,OAxBD;AAyBH,KA/BD;;AAFU;AAkCb;;;;WACD,0BAAwB;AACpB,aAAO,IAAIU,WAAJ,EAAP;AACH;;;EAtC4BD,yC","sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class PinwheelIn extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            const initialValues = this.initialValues;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(1, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(1, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('0', config)),\n                            },\n                        ],\n                    },\n                    initialValues: Object.assign({ opacity: 0, transform: [\n                            {\n                                scale: 0,\n                            },\n                            {\n                                rotate: '5',\n                            },\n                        ] }, initialValues),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelIn();\n    }\n}\nexport class PinwheelOut extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            const initialValues = this.initialValues;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(0, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(0, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('5', config)),\n                            },\n                        ],\n                    },\n                    initialValues: Object.assign({ opacity: 1, transform: [\n                            {\n                                scale: 1,\n                            },\n                            {\n                                rotate: '0',\n                            },\n                        ] }, initialValues),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelOut();\n    }\n}\n"]},"metadata":{},"sourceType":"script"}